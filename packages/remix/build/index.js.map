{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/auth.server.ts", "../app/utils/theme-provider.tsx", "../app/utils/theme.server.tsx", "../app/routes/action/set-theme.tsx", "../app/routes/signin.tsx", "../app/components/Footer.tsx", "../app/components/Header.tsx", "../app/components/DarkModeToggle.tsx", "../app/components/Container.tsx", "../app/utils/index.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, LoaderArgs, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from '@remix-run/react'\nimport tailwindStyles from './styles/app.css'\nimport { isAuthenticated } from './auth.server'\nimport {\n  Theme,\n  ThemeBody,\n  ThemeHead,\n  ThemeProvider,\n  useTheme,\n} from './utils/theme-provider'\nimport { getThemeSession } from './utils/theme.server'\n\nexport const links: LinksFunction = () => [\n  { rel: 'preconnect', href: '//fonts.gstatic.com', crossOrigin: 'anonymous' },\n  { rel: 'stylesheet', href: tailwindStyles },\n  {\n    rel: 'stylesheet',\n    href: '//fonts.googleapis.com/css?family=Work+Sans:300,400,600,700&amp;lang=en',\n  },\n]\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport type LoaderData = {\n  user: false | { user: any; token: any }\n\n  theme: Theme | null\n}\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const themeSession = await getThemeSession(request)\n\n  const data: LoaderData = {\n    user: await isAuthenticated(request),\n\n    theme: themeSession.getTheme(),\n  }\n\n  return data\n}\nexport type Loader = typeof loader\n\nexport function App() {\n  const data = useLoaderData<typeof loader>()\n  const [theme] = useTheme()\n\n  return (\n    <html lang=\"en\" className={theme ?? ''}>\n      <head>\n        <Meta />\n        <Links />\n        <ThemeHead ssrTheme={Boolean(data.theme)} />\n      </head>\n      <body>\n        <Outlet />\n        <ThemeBody ssrTheme={Boolean(data.theme)} />\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n\nexport default function AppWithProviders() {\n  const data = useLoaderData<LoaderData>()\n\n  return (\n    <ThemeProvider specifiedTheme={data.theme}>\n      <App />\n    </ThemeProvider>\n  )\n}\n", "/*\nthis is the auth server, we use a different directus instance here.\n*/\n\nimport dotenv from 'dotenv'\nimport { Directus } from '@directus/sdk'\nimport { createCookieSessionStorage, redirect } from '@remix-run/node'\n\ndotenv.config()\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '__session',\n    httpOnly: true,\n    path: '/',\n    sameSite: 'lax',\n    secrets: [process.env.SESSION_SECRET || ''],\n    // secure: process.env.NODE_ENV === \"production\",\n  },\n})\n\nconst USER_SESSION_KEY = 'userId'\n\nexport type User = {\n  user: {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    name: string\n    createdAt: string\n    updatedAt: string\n    meta?: object\n    stripeCustomerId: string\n    notes: string\n    type: string\n  }\n  token?: string\n}\n\nexport const directus = new Directus(process.env.DIRECTUS_URL || '', {\n  auth: {\n    mode: 'cookie',\n    autoRefresh: true,\n    msRefreshBeforeExpires: 900000,\n  },\n})\n\nexport async function getDirectusClient({\n  email,\n  password,\n  token,\n}: {\n  email?: string\n  password?: string\n  token?: string\n}) {\n  if (await directus.auth.token) return directus\n\n  if (email && password) {\n    await directus.auth.login({ email, password })\n  } else if (token) {\n    await directus.auth.static(token)\n  }\n  return directus\n}\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get('Cookie')\n  return sessionStorage.getSession(cookie)\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  user,\n  remember,\n  redirectTo,\n}: {\n  request: Request\n  userId: string\n  user: {\n    access_token: string\n    refresh_token?: string\n    expires?: number\n  }\n  remember: boolean\n  redirectTo: string\n}) {\n  const session = await getSession(request)\n  session.set(USER_SESSION_KEY, userId)\n  session.set('user', user)\n  return redirect(redirectTo, {\n    headers: {\n      'Set-Cookie': await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  })\n}\n\n/*\nexport async function refreshToken (request ) {\n  const session = await getSession(request); \n  const userId = session.get(USER_SESSION_KEY);\n  const user = session.get('user');\n}\n*/\n\nexport async function login({\n  email,\n  password,\n}: {\n  email: string\n  password: string\n}) {\n  const user = await directus.auth.login({ email, password })\n  return user\n}\n\nexport async function logout(request: Request) {\n  //await directus.auth.logout();\n  const session = await getSession(request)\n  return redirect('/signin', {\n    headers: {\n      'Set-Cookie': await sessionStorage.destroySession(session),\n    },\n  })\n}\n\nconst getToken = async (request: Request) => {\n  const session = await getSession(request)\n  return session.get(USER_SESSION_KEY)\n}\n\nexport async function getUser(request: Request) {\n  const token = await getToken(request)\n  if (token === undefined) return null\n  const user = await getUserByToken(token)\n  if (user) return user\n  throw await logout(request)\n}\n\nconst getUserByToken = async (token: string) => {\n  try {\n    await directus.auth.static(token)\n    const user = await directus.users.me.read()\n    if (!user.email) return false\n    return user\n  } catch (e) {\n    return false\n  }\n}\n\nexport async function requireAdminUser(request: Request) {\n  const data = await isAuthenticated(request)\n  if (data && data?.user && data.user.tags) {\n    if (!data.user.tags.includes('internal')) {\n      throw redirect('/signout')\n    }\n    return data?.user\n  }\n  throw redirect('/signout')\n}\n\nexport async function requireUser(request: Request) {\n  const data = await isAuthenticated(request)\n  if (data && data?.user) {\n    return data?.user\n  }\n  throw redirect('/signin')\n}\n\nexport const isAuthenticated = async (\n  request: Request,\n  //validateAndReturnUser = false,\n) => {\n  try {\n    const token = await getToken(request)\n    if (!token) return false\n    await directus.auth.static(token)\n    const user = await directus.users.me.read()\n    if (!user.email) return false\n    return { user, token }\n  } catch (e) {\n    return false\n  }\n}\n", "import React, {\n  createContext,\n  createElement,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useFetcher } from '@remix-run/react'\nimport type { Dispatch, ReactNode, SetStateAction } from 'react'\n\nenum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\nconst themes: Array<Theme> = Object.values(Theme)\n\ntype ThemeContextType = [Theme | null, Dispatch<SetStateAction<Theme | null>>]\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\n\nconst prefersDarkMQ = '(prefers-color-scheme: dark)'\nconst getPreferredTheme = () =>\n  window.matchMedia(prefersDarkMQ).matches ? Theme.DARK : Theme.LIGHT\n\nfunction ThemeProvider({\n  children,\n  specifiedTheme,\n}: {\n  children: ReactNode\n  specifiedTheme: Theme | null\n}) {\n  const [theme, setTheme] = useState<Theme | null>(() => {\n    // On the server, if we don't have a specified theme then we should\n    // return null and the clientThemeCode will set the theme for us\n    // before hydration. Then (during hydration), this code will get the same\n    // value that clientThemeCode got so hydration is happy.\n    if (specifiedTheme) {\n      if (themes.includes(specifiedTheme)) {\n        return specifiedTheme\n      } else {\n        return null\n      }\n    }\n\n    // there's no way for us to know what the theme should be in this context\n    // the client will have to figure it out before hydration.\n    if (typeof document === 'undefined') {\n      return null\n    }\n\n    return getPreferredTheme()\n  })\n\n  const persistTheme = useFetcher()\n  // TODO: remove this when persistTheme is memoized properly\n  const persistThemeRef = useRef(persistTheme)\n  useEffect(() => {\n    persistThemeRef.current = persistTheme\n  }, [persistTheme])\n\n  const mountRun = useRef(false)\n\n  useEffect(() => {\n    if (!mountRun.current) {\n      mountRun.current = true\n      return\n    }\n    if (!theme) {\n      return\n    }\n\n    persistThemeRef.current.submit(\n      { theme },\n      { action: 'action/set-theme', method: 'post' },\n    )\n  }, [theme])\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(prefersDarkMQ)\n    const handleChange = () => {\n      setTheme(mediaQuery.matches ? Theme.DARK : Theme.LIGHT)\n    }\n    mediaQuery.addEventListener('change', handleChange)\n    return () => mediaQuery.removeEventListener('change', handleChange)\n  }, [])\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nconst clientThemeCode = `\n// hi there dear reader \uD83D\uDC4B\n// this is how I make certain we avoid a flash of the wrong theme. If you select\n// a theme, then I'll know what you want in the future and you'll not see this\n// script anymore.\n;(() => {\n  const theme = window.matchMedia(${JSON.stringify(prefersDarkMQ)}).matches\n    ? 'dark'\n    : 'light';\n  const cl = document.documentElement.classList;\n  const themeAlreadyApplied = cl.contains('light') || cl.contains('dark');\n  if (themeAlreadyApplied) {\n    // this script shouldn't exist if the theme is already applied!\n    console.warn(\n      \"Hi there, could you let me know you're seeing this message? Thanks!\",\n    );\n  } else {\n    cl.add(theme);\n  }\n  const meta = document.querySelector('meta[name=color-scheme]');\n  if (meta) {\n    if (theme === 'dark') {\n      meta.content = 'dark light';\n    } else if (theme === 'light') {\n      meta.content = 'light dark';\n    }\n  } else {\n    console.warn(\n      \"Hey, could you let me know you're seeing this message? Thanks!\",\n    );\n  }\n})();\n`\n\nconst themeStylesCode = `\n  /* default light, but app-preference is \"dark\" */\n  html.dark {\n    light-mode {\n      display: none;\n    }\n  }\n\n  /* default light, and no app-preference */\n  html:not(.dark) {\n    dark-mode {\n      display: none;\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* prefers dark, but app-preference is \"light\" */\n    html.light {\n      dark-mode {\n        display: none;\n      }\n    }\n\n    /* prefers dark, and app-preference is \"dark\" */\n    html.dark,\n    /* prefers dark and no app-preference */\n    html:not(.light) {\n      light-mode {\n        display: none;\n      }\n    }\n  }\n`\n\nfunction ThemeHead({ ssrTheme }: { ssrTheme: boolean }) {\n  const [theme] = useTheme()\n\n  return (\n    <>\n      {/*\n        On the server, \"theme\" might be `null`, so clientThemeCode ensures that\n        this is correct before hydration.\n      */}\n      <meta\n        name=\"color-scheme\"\n        content={theme === 'light' ? 'light dark' : 'dark light'}\n      />\n      {/*\n        If we know what the theme is from the server then we don't need\n        to do fancy tricks prior to hydration to make things match.\n      */}\n      {ssrTheme ? null : (\n        <>\n          <script\n            // NOTE: we cannot use type=\"module\" because that automatically makes\n            // the script \"defer\". That doesn't work for us because we need\n            // this script to run synchronously before the rest of the document\n            // is finished loading.\n            dangerouslySetInnerHTML={{ __html: clientThemeCode }}\n          />\n          <style dangerouslySetInnerHTML={{ __html: themeStylesCode }} />\n        </>\n      )}\n    </>\n  )\n}\n\nconst clientDarkAndLightModeElsCode = `;(() => {\n  const theme = window.matchMedia(${JSON.stringify(prefersDarkMQ)}).matches\n    ? 'dark'\n    : 'light';\n  const darkEls = document.querySelectorAll(\"dark-mode\");\n  const lightEls = document.querySelectorAll(\"light-mode\");\n  for (const darkEl of darkEls) {\n    if (theme === \"dark\") {\n      for (const child of darkEl.childNodes) {\n        darkEl.parentElement?.append(child);\n      }\n    }\n    darkEl.remove();\n  }\n  for (const lightEl of lightEls) {\n    if (theme === \"light\") {\n      for (const child of lightEl.childNodes) {\n        lightEl.parentElement?.append(child);\n      }\n    }\n    lightEl.remove();\n  }\n})();`\n\nfunction ThemeBody({ ssrTheme }: { ssrTheme: boolean }) {\n  return ssrTheme ? null : (\n    <script\n      dangerouslySetInnerHTML={{ __html: clientDarkAndLightModeElsCode }}\n    />\n  )\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n}\n\n/**\n * This allows you to render something that depends on the theme without\n * worrying about whether it'll SSR properly when we don't actually know\n * the user's preferred theme.\n */\nfunction Themed({\n  dark,\n  light,\n  initialOnly = false,\n}: {\n  dark: ReactNode | string\n  light: ReactNode | string\n  initialOnly?: boolean\n}) {\n  const [theme] = useTheme()\n  const [initialTheme] = useState(theme)\n  const themeToReference = initialOnly ? initialTheme : theme\n  const serverRenderWithUnknownTheme = !theme && typeof document === 'undefined'\n\n  if (serverRenderWithUnknownTheme) {\n    // stick them both in and our little script will update the DOM to match\n    // what we'll render in the client during hydration.\n    return (\n      <>\n        {createElement('dark-mode', null, dark)}\n        {createElement('light-mode', null, light)}\n      </>\n    )\n  }\n\n  return <>{themeToReference === 'light' ? light : dark}</>\n}\n\nfunction isTheme(value: unknown): value is Theme {\n  return typeof value === 'string' && themes.includes(value as Theme)\n}\n\nexport { isTheme, Theme, Themed, ThemeBody, ThemeHead, ThemeProvider, useTheme }\n", "import { createCookieSessionStorage } from '@remix-run/node'\nimport type { Theme } from './theme-provider'\nimport { isTheme } from './theme-provider'\n\n// Make use to set the environment variable SESSION_SECRET before running the code\nconst sessionSecret = process.env.SESSION_SECRET ?? 'DEFAULT_SECRET'\n\nconst themeStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'rs:theme',\n    secure: true,\n    secrets: [sessionSecret],\n    sameSite: 'lax',\n    path: '/',\n    httpOnly: true,\n  },\n})\n\nasync function getThemeSession(request: Request) {\n  const session = await themeStorage.getSession(request.headers.get('Cookie'))\n  return {\n    getTheme: () => {\n      const themeValue = session.get('theme')\n      return isTheme(themeValue) ? themeValue : null\n    },\n    setTheme: (theme: Theme) => session.set('theme', theme),\n    commit: () => themeStorage.commitSession(session),\n  }\n}\n\nexport { getThemeSession }\n", "import type { ActionArgs, LoaderArgs } from '@remix-run/node'\nimport { json, redirect } from '@remix-run/node'\nimport { isTheme } from '../../utils/theme-provider'\nimport { getThemeSession } from '../../utils/theme.server'\n\nexport const action = async ({ request }: ActionArgs) => {\n  const themeSession = await getThemeSession(request)\n  const requestText = await request.text()\n  const form = new URLSearchParams(requestText)\n  const theme = form.get('theme')\n\n  if (!isTheme(theme)) {\n    return json({\n      success: false,\n      message: `theme value of ${theme} is not a valid theme`,\n    })\n  }\n\n  themeSession.setTheme(theme)\n  return json(\n    { success: true },\n    { headers: { 'Set-Cookie': await themeSession.commit() } },\n  )\n}\n\nexport const loader = ({ request }: LoaderArgs) =>\n  redirect('/', { status: 404 })\n", "import * as React from 'react'\nimport Container from '~/components/Container'\nimport type { ActionFunction, MetaFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Link, useActionData, useSearchParams } from '@remix-run/react'\nimport { createUserSession, login } from '~/auth.server'\nimport { safeRedirect, validateEmail } from '~/utils'\n\ninterface ActionData {\n  errors?: {\n    email?: string\n    password?: string\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  const email = formData.get('email')\n  const password = formData.get('password')\n  const redirectTo = safeRedirect(formData.get('redirectTo'), '/')\n  //const remember = formData.get('remember')\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: 'Email is invalid', password: null } },\n      { status: 400 },\n    )\n  }\n\n  if (typeof password !== 'string' || password.length === 0) {\n    return json(\n      { errors: { email: null, password: 'Password is required' } },\n      { status: 400 },\n    )\n  }\n\n  if (password.length < 6) {\n    return json(\n      { errors: { email: null, password: 'Password is too short' } },\n      { status: 400 },\n    )\n  }\n\n  try {\n    const user = await login({\n      email,\n      password,\n    })\n    console.log(user)\n    // we're logged so so save the session and redirect\n    if (user) {\n      return createUserSession({\n        request,\n        userId: user.access_token,\n        user: {\n          access_token: user.access_token,\n          refresh_token: user.refresh_token || '',\n          expires: user.expires || 900000,\n        },\n        remember: false,\n        redirectTo,\n      })\n    }\n  } catch (e) {\n    return json<ActionData>(\n      { errors: { password: 'Invalid Password' } },\n      { status: 400 },\n    )\n  }\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Login',\n  }\n}\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams()\n  const redirectTo = searchParams.get('redirectTo') || '/notes'\n  const actionData = useActionData() as ActionData\n  const emailRef = React.useRef<HTMLInputElement>(null)\n  const passwordRef = React.useRef<HTMLInputElement>(null)\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus()\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus()\n    }\n  }, [actionData])\n\n  return (\n    <Container>\n      <div className=\"min-h-full w-full flex flex-col justify-center\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"text-center text-3xl font-extrabold\">\n            Sign in to your account\n          </h2>\n        </div>\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-indigo-100 py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form className=\"space-y-6\" method=\"POST\">\n              <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    ref={emailRef}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    aria-invalid={actionData?.errors?.email ? true : undefined}\n                    aria-describedby=\"email-error\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n                {actionData?.errors?.email && (\n                  <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                    {actionData.errors.email}\n                  </div>\n                )}\n              </div>\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    ref={passwordRef}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    required\n                    aria-invalid={\n                      actionData?.errors?.password ? true : undefined\n                    }\n                    aria-describedby=\"password-error\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n                {actionData?.errors?.password && (\n                  <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                    {actionData.errors.password}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"remember\"\n                    name=\"remember\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                  />\n                  <label\n                    htmlFor=\"remember\"\n                    className=\"ml-2 block text-sm text-gray-900\"\n                  >\n                    Remember me\n                  </label>\n                </div>\n                <div className=\"text-sm\"></div>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Sign in\n                </button>\n                <div className=\"text-sm mt-4\">\n                  <Link\n                    to=\"/signup\"\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                  >\n                    Don't have an account? Sign up instead\n                  </Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Container>\n  )\n}\n", "export default function Footer() {\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-7xl mx-auto py-12 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <hr className=\"w-full border-1 border-gray-200 dark:border-gray-800 mb-8\" />\n\n        <p className=\"mt-8 text-center text-base text-gray-400\">\n          &copy; {new Date().getFullYear()} fickt euch alle zusammen\n        </p>\n      </div>\n    </footer>\n  )\n}\n", "import { NavLink } from '@remix-run/react'\nimport DarkModeToggle from './DarkModeToggle'\n\nexport default function Header() {\n  return (\n    <header>\n      <DarkModeToggle />\n      <NavLink\n        to=\"/signin\"\n        className=\"inline-flex justify-center px-4 py-2 mt-4 mr-4 text-sm font-medium transition duration-150 ease-in-out bg-gray-200 border border-transparent rounded-md hover:bg-gray-300 focus:outline-none focus:border-gray-700 focus:shadow-outline-royal-blue active:bg-royal-blue-700 md:mt-0\"\n      >\n        Login\n      </NavLink>\n    </header>\n  )\n}\n", "import React, { useState } from 'react'\nimport { Theme, useTheme } from '../utils/theme-provider'\n\nexport default function Example() {\n  const [theme, setTheme] = useTheme()\n  const [enabled, setEnabled] = useState(theme !== 'light' ? true : false)\n\n  const toggleTheme = () => {\n    setEnabled(!enabled)\n    setTheme((prevTheme) =>\n      prevTheme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT,\n    )\n    console.log('TOGGLE')\n  }\n\n  return <button onClick={toggleTheme}>Darkmode</button>\n}\n", "import type { ReactNode } from 'react'\nimport Footer from './Footer'\nimport Header from './Header'\n\ninterface ContainerProps {\n  children?: ReactNode\n}\nexport default function Container({ children }: ContainerProps) {\n  return (\n    <main id=\"skip\" className=\"flex flex-col justify-center px-2 py-2\">\n      <Header />\n      {children}\n      <Footer />\n    </main>\n  )\n}\n", "const DEFAULT_REDIRECT = '/'\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT,\n) {\n  if (!to || typeof to !== 'string') {\n    return defaultRedirect\n  }\n\n  if (!to.startsWith('/') || to.startsWith('//')) {\n    return defaultRedirect\n  }\n\n  return to\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === 'string' && email.length > 3 && email.includes('@')\n}\n", "import { useState } from 'react'\nimport Container from '../components/Container'\n\nexport default function Index() {\n  const [state, SetState] = useState()\n\n  return (\n    <Container>\n      <div className=\"bg-red-600 dark:bg-lime-400\">\n        <h1>Welcome to Remix</h1>\n        <ul>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://remix.run/tutorials/blog\"\n              rel=\"noreferrer\"\n            >\n              15m Quickstart Blog Tutorial\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://remix.run/tutorials/jokes\"\n              rel=\"noreferrer\"\n            >\n              Deep Dive Jokes App Tutorial\n            </a>\n          </li>\n          <li>\n            <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n              Remix Docs\n            </a>\n          </li>\n        </ul>\n      </div>\n    </Container>\n  )\n}\n", "export default {'version':'1a42f331','entry':{'module':'/build/entry.client-22BAFNPA.js','imports':['/build/_shared/chunk-I4D7ICE6.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-7UFIJGBX.js','imports':['/build/_shared/chunk-GL6K6V77.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/action/set-theme':{'id':'routes/action/set-theme','parentId':'root','path':'action/set-theme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/action/set-theme-YESPDKP5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-I4LQEFAS.js','imports':['/build/_shared/chunk-NGM2HYDX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signin':{'id':'routes/signin','parentId':'root','path':'signin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signin-5PP6BFMB.js','imports':['/build/_shared/chunk-NGM2HYDX.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-1A42F331.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/action/set-theme.tsx\";\nimport * as route2 from \"./routes/signin.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/action/set-theme\": {\n      id: \"routes/action/set-theme\",\n      parentId: \"root\",\n      path: \"action/set-theme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/signin\": {\n      id: \"routes/signin\",\n      parentId: \"root\",\n      path: \"signin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,mBAE5B,cAAyB,4BACzB,eAA4B,6BAC5B,eAAkB,2BAClB,gBAAuC,6BALvC,2DAOM,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,aAAO,aAAAA,SAAM,QAAQ,QAAQ,IAAI,YAAY,CAAC,IAC1C;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACN;AAEA,SAAS,iBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,WAAW,IAET,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB,mDAAC;AAAA,QAAY,SAAS;AAAA,QAAc,KAAK,QAAQ;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA,aAAsD;AAAA,MACtD;AAAA,QACE,aAAa;AACX,cAAM,OAAO,IAAI,0BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ,WAAW,MAAM;AAAA,YAC3B,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,qBAAW,IAEX,QAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;AAEA,SAAS,qBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,WAAW,IAET,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB,mDAAC;AAAA,QAAY,SAAS;AAAA,QAAc,KAAK,QAAQ;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA,aAAsD;AAAA,MACtD;AAAA,QACE,eAAe;AACb,cAAM,OAAO,IAAI,0BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ,WAAW,MAAM;AAAA,YAC3B,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,KAAc;AACzB,iBAAO,GAAG;AAAA,QACZ;AAAA,QACA,QAAQ,OAAgB;AACtB,qBAAW,IAEX,QAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAC,gBAQO;;;;;;ACLP,oBAAmB,4BACnB,aAAyB,0BACzBC,eAAqD;AAErD,cAAAC,QAAO,OAAO;AAEP,IAAM,qBAAiB,yCAA2B;AAAA,EACvD,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,CAAC,QAAQ,IAAI,kBAAkB,EAAE;AAAA,EAE5C;AACF,CAAC,GAEK,mBAAmB,UAqBZ,WAAW,IAAI,oBAAS,QAAQ,IAAI,gBAAgB,IAAI;AAAA,EACnE,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,wBAAwB;AAAA,EAC1B;AACF,CAAC;AAqBD,eAAsB,WAAW,SAAkB;AACjD,MAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,SAAO,eAAe,WAAW,MAAM;AACzC;AAEA,eAAsB,kBAAkB;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAUG;AACD,MAAM,UAAU,MAAM,WAAW,OAAO;AACxC,iBAAQ,IAAI,kBAAkB,MAAM,GACpC,QAAQ,IAAI,QAAQ,IAAI,OACjB,uBAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,eAAe,cAAc,SAAS;AAAA,QACxD,QAAQ,WACJ,KAAK,KAAK,KAAK,IACf;AAAA,MACN,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;AAUA,eAAsB,MAAM;AAAA,EAC1B;AAAA,EACA;AACF,GAGG;AAED,SADa,MAAM,SAAS,KAAK,MAAM,EAAE,OAAO,SAAS,CAAC;AAE5D;AAYA,IAAM,WAAW,OAAO,aACN,MAAM,WAAW,OAAO,GACzB,IAAI,gBAAgB;AAyC9B,IAAM,kBAAkB,OAC7B,YAEG;AACH,MAAI;AACF,QAAM,QAAQ,MAAM,SAAS,OAAO;AACpC,QAAI,CAAC;AAAO,aAAO;AACnB,UAAM,SAAS,KAAK,OAAO,KAAK;AAChC,QAAM,OAAO,MAAM,SAAS,MAAM,GAAG,KAAK;AAC1C,WAAK,KAAK,QACH,EAAE,MAAM,MAAM,IADG;AAAA,EAE1B,QAAE;AACA,WAAO;AAAA,EACT;AACF;;;AC/LA,IAAAC,gBAOO,kBACPA,gBAA2B,6BAR3B,2DAWK,QAAL,kBAAKC,YACHA,OAAA,OAAO,QACPA,OAAA,QAAQ,SAFLA,SAAA,cAIC,SAAuB,OAAO,OAAO,KAAK,GAI1C,mBAAe,6BAA4C,MAAS,GAEpE,gBAAgB,gCAChB,oBAAoB,MACxB,OAAO,WAAW,aAAa,EAAE,UAAU,oBAAa;AAE1D,SAAS,cAAc;AAAA,EACrB;AAAA,EACA;AACF,GAGG;AACD,MAAM,CAAC,OAAO,QAAQ,QAAI,wBAAuB,MAK3C,iBACE,OAAO,SAAS,cAAc,IACzB,iBAEA,OAMP,OAAO,WAAa,MACf,OAGF,kBAAkB,CAC1B,GAEK,mBAAe,0BAAW,GAE1B,sBAAkB,sBAAO,YAAY;AAC3C,+BAAU,MAAM;AACd,oBAAgB,UAAU;AAAA,EAC5B,GAAG,CAAC,YAAY,CAAC;AAEjB,MAAM,eAAW,sBAAO,EAAK;AAE7B,sCAAU,MAAM;AACd,QAAI,CAAC,SAAS,SAAS;AACrB,eAAS,UAAU;AACnB;AAAA,IACF;AACA,IAAI,CAAC,SAIL,gBAAgB,QAAQ;AAAA,MACtB,EAAE,MAAM;AAAA,MACR,EAAE,QAAQ,oBAAoB,QAAQ,OAAO;AAAA,IAC/C;AAAA,EACF,GAAG,CAAC,KAAK,CAAC,OAEV,yBAAU,MAAM;AACd,QAAM,aAAa,OAAO,WAAW,aAAa,GAC5C,eAAe,MAAM;AACzB,eAAS,WAAW,UAAU,oBAAa,mBAAW;AAAA,IACxD;AACA,sBAAW,iBAAiB,UAAU,YAAY,GAC3C,MAAM,WAAW,oBAAoB,UAAU,YAAY;AAAA,EACpE,GAAG,CAAC,CAAC,GAGH,mDAAC,aAAa,UAAb;AAAA,IAAsB,OAAO,CAAC,OAAO,QAAQ;AAAA,IAC3C;AAAA,KADH;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAM,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAMY,KAAK,UAAU,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4B1D,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCxB,SAAS,UAAU,EAAE,SAAS,GAA0B;AACtD,MAAM,CAAC,KAAK,IAAI,SAAS;AAEzB,SACE;AAAA,IAKE;AAAA,yDAAC;AAAA,QACC,MAAK;AAAA,QACL,SAAS,UAAU,UAAU,eAAe;AAAA,SAF9C;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAKC,WAAW,OACV;AAAA,QACE;AAAA,6DAAC;AAAA,YAKC,yBAAyB,EAAE,QAAQ,gBAAgB;AAAA,aALrD;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UACA,mDAAC;AAAA,YAAM,yBAAyB,EAAE,QAAQ,gBAAgB;AAAA,aAA1D;AAAA;AAAA;AAAA;AAAA,iBAA6D;AAAA;AAAA,SAR/D;AAAA;AAAA;AAAA;AAAA,aASA;AAAA;AAAA,KAvBJ;AAAA;AAAA;AAAA;AAAA,SAyBA;AAEJ;AAEA,IAAM,gCAAgC;AAAA,oCACF,KAAK,UAAU,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBhE,SAAS,UAAU,EAAE,SAAS,GAA0B;AACtD,SAAO,WAAW,OAChB,mDAAC;AAAA,IACC,yBAAyB,EAAE,QAAQ,8BAA8B;AAAA,KADnE;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,SAAS,WAAW;AAClB,MAAM,cAAU,0BAAW,YAAY;AACvC,MAAI,YAAY;AACd,UAAM,IAAI,MAAM,8CAA8C;AAEhE,SAAO;AACT;AAmCA,SAAS,QAAQ,OAAgC;AAC/C,SAAO,OAAO,SAAU,YAAY,OAAO,SAAS,KAAc;AACpE;;;AC9QA,IAAAC,eAA2C;AAK3C,IAAM,gBAAgB,QAAQ,IAAI,kBAAkB,kBAE9C,mBAAe,yCAA2B;AAAA,EAC9C,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAC,aAAa;AAAA,IACvB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AACF,CAAC;AAED,eAAe,gBAAgB,SAAkB;AAC/C,MAAM,UAAU,MAAM,aAAa,WAAW,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AAC3E,SAAO;AAAA,IACL,UAAU,MAAM;AACd,UAAM,aAAa,QAAQ,IAAI,OAAO;AACtC,aAAO,QAAQ,UAAU,IAAI,aAAa;AAAA,IAC5C;AAAA,IACA,UAAU,CAAC,UAAiB,QAAQ,IAAI,SAAS,KAAK;AAAA,IACtD,QAAQ,MAAM,aAAa,cAAc,OAAO;AAAA,EAClD;AACF;;;AH5BA,+DAqBa,QAAuB,MAAM;AAAA,EACxC,EAAE,KAAK,cAAc,MAAM,uBAAuB,aAAa,YAAY;AAAA,EAC3E,EAAE,KAAK,cAAc,MAAM,YAAe;AAAA,EAC1C;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA,EACR;AACF,GAEa,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACZ,IAQa,SAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,eAAe,MAAM,gBAAgB,OAAO;AAQlD,SANyB;AAAA,IACvB,MAAM,MAAM,gBAAgB,OAAO;AAAA,IAEnC,OAAO,aAAa,SAAS;AAAA,EAC/B;AAGF;AAGO,SAAS,MAAM;AACpB,MAAM,WAAO,6BAA6B,GACpC,CAAC,KAAK,IAAI,SAAS;AAEzB,SACE,mDAAC;AAAA,IAAK,MAAK;AAAA,IAAK,WAAW,SAAS;AAAA,IAClC;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA,UACP,mDAAC;AAAA,YAAU,UAAU,QAAQ,KAAK,KAAK;AAAA,aAAvC;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA;AAAA,SAH5C;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,6DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAAA,UACR,mDAAC;AAAA,YAAU,UAAU,QAAQ,KAAK,KAAK;AAAA,aAAvC;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA,UAE1C,mDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UACT,mDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA;AAAA,SANd;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA;AAAA,KAbF;AAAA;AAAA;AAAA;AAAA,SAcA;AAEJ;AAEe,SAAR,mBAAoC;AACzC,MAAM,WAAO,6BAA0B;AAEvC,SACE,mDAAC;AAAA,IAAc,gBAAgB,KAAK;AAAA,IAClC,6DAAC,SAAD;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA,KADP;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;;;AItFA;AAAA;AAAA;AAAA,gBAAAC;AAAA;AACA,IAAAC,eAA+B;AAIxB,IAAM,SAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,eAAe,MAAM,gBAAgB,OAAO,GAC5C,cAAc,MAAM,QAAQ,KAAK,GAEjC,QADO,IAAI,gBAAgB,WAAW,EACzB,IAAI,OAAO;AAE9B,SAAK,QAAQ,KAAK,KAOlB,aAAa,SAAS,KAAK,OACpB;AAAA,IACL,EAAE,SAAS,GAAK;AAAA,IAChB,EAAE,SAAS,EAAE,cAAc,MAAM,aAAa,OAAO,EAAE,EAAE;AAAA,EAC3D,SAVS,mBAAK;AAAA,IACV,SAAS;AAAA,IACT,SAAS,kBAAkB;AAAA,EAC7B,CAAC;AAQL,GAEaC,UAAS,CAAC,EAAE,QAAQ,UAC/B,uBAAS,KAAK,EAAE,QAAQ,IAAI,CAAC;;;AC1B/B;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA;AAAA,IAAAC,SAAuB;;;ACAvB;AAAe,SAAR,SAA0B;AAC/B,SACE,mDAAC;AAAA,IAAO,WAAU;AAAA,IAChB,6DAAC;AAAA,MAAI,WAAU;AAAA,MACb;AAAA,2DAAC;AAAA,UAAG,WAAU;AAAA,WAAd;AAAA;AAAA;AAAA;AAAA,eAA0E;AAAA,QAE1E,mDAAC;AAAA,UAAE,WAAU;AAAA,UAA2C;AAAA;AAAA,YAC9C,IAAI,KAAK,EAAE,YAAY;AAAA,YAAE;AAAA;AAAA,WADnC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;;;ACZA,IAAAC,gBAAwB;;;ACAxB,IAAAC,gBAAgC;AAAhC;AAGe,SAAR,UAA2B;AAChC,MAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,GAC7B,CAAC,SAAS,UAAU,QAAI,wBAAS,UAAU,OAAsB;AAUvE,SAAO,mDAAC;AAAA,IAAO,SARK,MAAM;AACxB,iBAAW,CAAC,OAAO,GACnB;AAAA,QAAS,CAAC,cACR;AAAA,MACF,GACA,QAAQ,IAAI,QAAQ;AAAA,IACtB;AAAA,IAEqC;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA,SAAsC;AAC/C;;;ADhBA;AAGe,SAAR,SAA0B;AAC/B,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,MAChB,mDAAC;AAAA,QACC,IAAG;AAAA,QACH,WAAU;AAAA,QACX;AAAA,SAHD;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;;;AEfA;AAOe,SAAR,UAA2B,EAAE,SAAS,GAAmB;AAC9D,SACE,mDAAC;AAAA,IAAK,IAAG;AAAA,IAAO,WAAU;AAAA,IACxB;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACP;AAAA,MACD,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;;;AJZA,IAAAC,eAAqB,4BACrBC,gBAAqD;;;AKJrD,IAAM,mBAAmB;AASlB,SAAS,aACd,IACA,kBAA0B,kBAC1B;AAKA,SAJI,CAAC,MAAM,OAAO,MAAO,YAIrB,CAAC,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,IAAI,IACpC,kBAGF;AACT;AAEO,SAAS,cAAc,OAAiC;AAC7D,SAAO,OAAO,SAAU,YAAY,MAAM,SAAS,KAAK,MAAM,SAAS,GAAG;AAC5E;;;AL1BA,+DAeaC,UAAyB,OAAO,EAAE,QAAQ,MAAM;AAC3D,MAAM,WAAW,MAAM,QAAQ,SAAS,GAClC,QAAQ,SAAS,IAAI,OAAO,GAC5B,WAAW,SAAS,IAAI,UAAU,GAClC,aAAa,aAAa,SAAS,IAAI,YAAY,GAAG,GAAG;AAG/D,MAAI,CAAC,cAAc,KAAK;AACtB,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,OAAO,oBAAoB,UAAU,KAAK,EAAE;AAAA,MACxD,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAI,OAAO,YAAa,YAAY,SAAS,WAAW;AACtD,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,uBAAuB,EAAE;AAAA,MAC5D,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAI,SAAS,SAAS;AACpB,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,wBAAwB,EAAE;AAAA,MAC7D,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAI;AACF,QAAM,OAAO,MAAM,MAAM;AAAA,MACvB;AAAA,MACA;AAAA,IACF,CAAC;AAGD,QAFA,QAAQ,IAAI,IAAI,GAEZ;AACF,aAAO,kBAAkB;AAAA,QACvB;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,MAAM;AAAA,UACJ,cAAc,KAAK;AAAA,UACnB,eAAe,KAAK,iBAAiB;AAAA,UACrC,SAAS,KAAK,WAAW;AAAA,QAC3B;AAAA,QACA,UAAU;AAAA,QACV;AAAA,MACF,CAAC;AAAA,EAEL,QAAE;AACA,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,UAAU,mBAAmB,EAAE;AAAA,MAC3C,EAAE,QAAQ,IAAI;AAAA,IAChB;AAAA,EACF;AACF,GAEaC,QAAqB,OACzB;AAAA,EACL,OAAO;AACT;AAGa,SAAR,YAA6B;AA7EpC;AA8EE,MAAM,CAAC,YAAY,QAAI,+BAAgB,GACjC,aAAa,aAAa,IAAI,YAAY,KAAK,UAC/C,iBAAa,6BAAc,GAC3B,WAAiB,cAAyB,IAAI,GAC9C,cAAoB,cAAyB,IAAI;AAEvD,SAAM,iBAAU,MAAM;AApFxB,QAAAC,KAAAC,KAAAC,KAAAC;AAqFI,KAAIH,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,SACtBC,MAAA,SAAS,YAAT,QAAAA,IAAkB,WACTC,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,cAC7BC,MAAA,YAAY,YAAZ,QAAAA,IAAqB;AAAA,EAEzB,GAAG,CAAC,UAAU,CAAC,GAGb,mDAAC;AAAA,IACC,6DAAC;AAAA,MAAI,WAAU;AAAA,MACb;AAAA,2DAAC;AAAA,UAAI,WAAU;AAAA,UACb,6DAAC;AAAA,YAAG,WAAU;AAAA,YAAsC;AAAA,aAApD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QACA,mDAAC;AAAA,UAAI,WAAU;AAAA,UACb,6DAAC;AAAA,YAAI,WAAU;AAAA,YACb,6DAAC;AAAA,cAAK,WAAU;AAAA,cAAY,QAAO;AAAA,cACjC;AAAA,mEAAC;AAAA,kBAAM,MAAK;AAAA,kBAAS,MAAK;AAAA,kBAAa,OAAO;AAAA,mBAA9C;AAAA;AAAA;AAAA;AAAA,uBAA0D;AAAA,gBAC1D,mDAAC;AAAA,kBACC;AAAA,uEAAC;AAAA,sBACC,SAAQ;AAAA,sBACR,WAAU;AAAA,sBACX;AAAA,uBAHD;AAAA;AAAA;AAAA;AAAA,2BAKA;AAAA,oBACA,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBACb,6DAAC;AAAA,wBACC,KAAK;AAAA,wBACL,IAAG;AAAA,wBACH,MAAK;AAAA,wBACL,MAAK;AAAA,wBACL,cAAa;AAAA,wBACb,UAAQ;AAAA,wBACR,iBAAc,8CAAY,WAAZ,WAAoB,QAAQ,KAAO;AAAA,wBACjD,oBAAiB;AAAA,wBACjB,WAAU;AAAA,yBATZ;AAAA;AAAA;AAAA;AAAA,6BAUA;AAAA,uBAXF;AAAA;AAAA;AAAA;AAAA,2BAYA;AAAA,sBACC,8CAAY,WAAZ,mBAAoB,UACnB,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBAAoB,IAAG;AAAA,sBACnC,qBAAW,OAAO;AAAA,uBADrB;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA;AAAA,mBAvBJ;AAAA;AAAA;AAAA;AAAA,uBAyBA;AAAA,gBACA,mDAAC;AAAA,kBACC;AAAA,uEAAC;AAAA,sBACC,SAAQ;AAAA,sBACR,WAAU;AAAA,sBACX;AAAA,uBAHD;AAAA;AAAA;AAAA;AAAA,2BAKA;AAAA,oBACA,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBACb,6DAAC;AAAA,wBACC,KAAK;AAAA,wBACL,IAAG;AAAA,wBACH,MAAK;AAAA,wBACL,MAAK;AAAA,wBACL,cAAa;AAAA,wBACb,UAAQ;AAAA,wBACR,iBACE,8CAAY,WAAZ,WAAoB,WAAW,KAAO;AAAA,wBAExC,oBAAiB;AAAA,wBACjB,WAAU;AAAA,yBAXZ;AAAA;AAAA;AAAA;AAAA,6BAYA;AAAA,uBAbF;AAAA;AAAA;AAAA;AAAA,2BAcA;AAAA,sBACC,8CAAY,WAAZ,mBAAoB,aACnB,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBAAoB,IAAG;AAAA,sBACnC,qBAAW,OAAO;AAAA,uBADrB;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA;AAAA,mBAzBJ;AAAA;AAAA;AAAA;AAAA,uBA2BA;AAAA,gBAEA,mDAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAI,WAAU;AAAA,sBACb;AAAA,2EAAC;AAAA,0BACC,IAAG;AAAA,0BACH,MAAK;AAAA,0BACL,MAAK;AAAA,0BACL,WAAU;AAAA,2BAJZ;AAAA;AAAA;AAAA;AAAA,+BAKA;AAAA,wBACA,mDAAC;AAAA,0BACC,SAAQ;AAAA,0BACR,WAAU;AAAA,0BACX;AAAA,2BAHD;AAAA;AAAA;AAAA;AAAA,+BAKA;AAAA;AAAA,uBAZF;AAAA;AAAA;AAAA;AAAA,2BAaA;AAAA,oBACA,mDAAC;AAAA,sBAAI,WAAU;AAAA,uBAAf;AAAA;AAAA;AAAA;AAAA,2BAAyB;AAAA;AAAA,mBAf3B;AAAA;AAAA;AAAA;AAAA,uBAgBA;AAAA,gBACA,mDAAC;AAAA,kBACC;AAAA,uEAAC;AAAA,sBACC,MAAK;AAAA,sBACL,WAAU;AAAA,sBACX;AAAA,uBAHD;AAAA;AAAA;AAAA;AAAA,2BAKA;AAAA,oBACA,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBACb,6DAAC;AAAA,wBACC,IAAG;AAAA,wBACH,WAAU;AAAA,wBACX;AAAA,yBAHD;AAAA;AAAA;AAAA;AAAA,6BAKA;AAAA,uBANF;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA;AAAA,mBAdF;AAAA;AAAA;AAAA;AAAA,uBAeA;AAAA;AAAA,eAzFF;AAAA;AAAA;AAAA;AAAA,mBA0FA;AAAA,aA3FF;AAAA;AAAA;AAAA;AAAA,iBA4FA;AAAA,WA7FF;AAAA;AAAA;AAAA;AAAA,eA8FA;AAAA;AAAA,OApGF;AAAA;AAAA;AAAA;AAAA,WAqGA;AAAA,KAtGF;AAAA;AAAA;AAAA;AAAA,SAuGA;AAEJ;;;AMtMA;AAAA;AAAA;AAAA;AAAA,IAAAC,gBAAyB;AAAzB;AAGe,SAAR,QAAyB;AAC9B,MAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS;AAEnC,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MAAI,WAAU;AAAA,MACb;AAAA,2DAAC;AAAA,UAAG;AAAA,WAAJ;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,QACpB,mDAAC;AAAA,UACC;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBACC,QAAO;AAAA,gBACP,MAAK;AAAA,gBACL,KAAI;AAAA,gBACL;AAAA,iBAJD;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA,YACA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBACC,QAAO;AAAA,gBACP,MAAK;AAAA,gBACL,KAAI;AAAA,gBACL;AAAA,iBAJD;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA,YACA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAE,QAAO;AAAA,gBAAS,MAAK;AAAA,gBAAyB,KAAI;AAAA,gBAAa;AAAA,iBAAlE;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,eAwBA;AAAA;AAAA,OA1BF;AAAA;AAAA;AAAA;AAAA,WA2BA;AAAA,KA5BF;AAAA;AAAA;AAAA;AAAA,SA6BA;AAEJ;;;ACtCA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,2BAA0B,EAAC,IAAK,2BAA0B,UAAW,QAAO,MAAO,oBAAmB,OAAQ,QAAU,eAAgB,QAAU,QAAS,8CAA6C,SAAU,QAAU,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,UAAS,OAAQ,QAAU,eAAgB,QAAU,QAAS,oCAAmC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,KAAM,8BAA6B;;;ACO70C,IAAM,uBAAuB,gBACvB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,2BAA2B;AAAA,IACvB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["isbot", "import_react", "import_node", "dotenv", "import_react", "Theme", "import_node", "loader", "import_node", "loader", "action", "meta", "React", "import_react", "import_react", "import_node", "import_react", "action", "meta", "_a", "_b", "_c", "_d", "import_react"]
}
