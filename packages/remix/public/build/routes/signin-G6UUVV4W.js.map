{
  "version": 3,
  "sources": ["empty-module:~/auth.server", "../../../app/routes/signin.tsx"],
  "sourcesContent": ["module.exports = {};", "import * as React from 'react'\nimport Container from '~/components/Container'\nimport type { ActionFunction, MetaFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Link, useActionData, useSearchParams } from '@remix-run/react'\nimport { createUserSession, login } from '~/auth.server'\nimport { safeRedirect, validateEmail } from '~/utils'\n\ninterface ActionData {\n  errors?: {\n    email?: string\n    password?: string\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  const email = formData.get('email')\n  const password = formData.get('password')\n  const redirectTo = safeRedirect(formData.get('redirectTo'), '/notes')\n  const remember = formData.get('remember')\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: 'Email is invalid', password: null } },\n      { status: 400 },\n    )\n  }\n\n  if (typeof password !== 'string' || password.length === 0) {\n    return json(\n      { errors: { email: null, password: 'Password is required' } },\n      { status: 400 },\n    )\n  }\n\n  if (password.length < 6) {\n    return json(\n      { errors: { email: null, password: 'Password is too short' } },\n      { status: 400 },\n    )\n  }\n\n  try {\n    const user = await login({\n      email,\n      password,\n    })\n    // we're logged so so save the session and redirect\n    if (user) {\n      return createUserSession({\n        request,\n        userId: user.access_token,\n        user: {\n          access_token: user.access_token,\n          refresh_token: user.refresh_token || '',\n          expires: user.expires || 900000,\n        },\n        remember: remember === 'on' ? true : false,\n        redirectTo,\n      })\n    }\n  } catch (e) {\n    return json<ActionData>(\n      { errors: { password: 'Invalid Password' } },\n      { status: 400 },\n    )\n  }\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Login',\n  }\n}\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams()\n  const redirectTo = searchParams.get('redirectTo') || '/notes'\n  const actionData = useActionData() as ActionData\n  const emailRef = React.useRef<HTMLInputElement>(null)\n  const passwordRef = React.useRef<HTMLInputElement>(null)\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus()\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus()\n    }\n  }, [actionData])\n\n  return (\n    <Container>\n      <div className=\"min-h-full w-full flex flex-col justify-center\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <h2 className=\"text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to your account\n          </h2>\n        </div>\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-indigo-100 py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form className=\"space-y-6\" method=\"POST\">\n              <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    ref={emailRef}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    aria-invalid={actionData?.errors?.email ? true : undefined}\n                    aria-describedby=\"email-error\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n                {actionData?.errors?.email && (\n                  <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                    {actionData.errors.email}\n                  </div>\n                )}\n              </div>\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    ref={passwordRef}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    required\n                    aria-invalid={\n                      actionData?.errors?.password ? true : undefined\n                    }\n                    aria-describedby=\"password-error\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n                {actionData?.errors?.password && (\n                  <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                    {actionData.errors.password}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"remember\"\n                    name=\"remember\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                  />\n                  <label\n                    htmlFor=\"remember\"\n                    className=\"ml-2 block text-sm text-gray-900\"\n                  >\n                    Remember me\n                  </label>\n                </div>\n                <div className=\"text-sm\"></div>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Sign in\n                </button>\n                <div className=\"text-sm mt-4\">\n                  <Link\n                    to=\"/signup\"\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                  >\n                    Don't have an account? Sign up instead\n                  </Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Container>\n  )\n}\n"],
  "mappings": "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",
  "names": ["_a", "_b", "_c", "_d"]
}
